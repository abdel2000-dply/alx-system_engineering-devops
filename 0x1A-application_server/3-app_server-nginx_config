server {
        listen 80 default_server;
        listen [::]:80 default_server;

        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;

        location /hbnb_static/ {
                alias /data/web_static/current/;
        }

        error_page 404 /404;
        location = /404 {
                internal;
                return 404 "Ceci n'est pas une page\n";
        }


        location /redirect_me {
                return 301 https://www.youtube.com/watch?v=QH2-TGUlwu4;
        }

        location /airbnb-onepage {
                proxy_pass http://127.0.0.1:5000/airbnb-onepage;
                proxy_redirect off;
        }

        location /airbnb-dynamic/number_odd_or_even {
                proxy_pass http://127.0.0.1:5001/number_odd_or_even;
                proxy_redirect off;
        }

# Note: You should disable gzip for SSL traffic.
# See: https://bugs.debian.org/773332
#
# Read up on ssl_ciphers to ensure a secure configuration.
# See: https://bugs.debian.org/765782
#
# Self signed certs generated by the ssl-cert package
# Don't use them in a production server!
#
# include snippets/snakeoil.conf;

        root /var/www/html;

# Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;

        server_name _;

        location / {
                add_header X-Served-By '376448-web-01';
# First attempt to serve request as file, then
# as directory, then fall back to displaying a 404.
                try_files $uri $uri/ @404;
        }

# pass PHP scripts to FastCGI server
#
#location ~ \.php$ {
#       include snippets/fastcgi-php.conf;
#
#       # With php-fpm (or other unix sockets):
#       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
#       # With php-cgi (or other tcp sockets):
#       fastcgi_pass 127.0.0.1:9000;
#}

}
# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#       deny all;
#}
# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ @404;
#       }
#}
